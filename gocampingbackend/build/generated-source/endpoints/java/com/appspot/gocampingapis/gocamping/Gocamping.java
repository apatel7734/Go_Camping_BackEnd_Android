/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-04-08 17:16:44 UTC)
 * on 2016-04-19 at 05:50:15 UTC 
 * Modify at your own risk.
 */

package com.appspot.gocampingapis.gocamping;

/**
 * Service definition for Gocamping (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link GocampingRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Gocamping extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the gocamping library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://gocampingapis.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "gocamping/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Gocamping(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Gocamping(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addExpense".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link AddExpense#execute()} method to invoke the remote operation.
   *
   * @param campingTripId
   * @param content the {@link com.appspot.gocampingapis.gocamping.model.Expense}
   * @return the request
   */
  public AddExpense addExpense(java.lang.Long campingTripId, com.appspot.gocampingapis.gocamping.model.Expense content) throws java.io.IOException {
    AddExpense result = new AddExpense(campingTripId, content);
    initialize(result);
    return result;
  }

  public class AddExpense extends GocampingRequest<Void> {

    private static final String REST_PATH = "addExpense/{campingTripId}";

    /**
     * Create a request for the method "addExpense".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link AddExpense#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddExpense#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param campingTripId
     * @param content the {@link com.appspot.gocampingapis.gocamping.model.Expense}
     * @since 1.13
     */
    protected AddExpense(java.lang.Long campingTripId, com.appspot.gocampingapis.gocamping.model.Expense content) {
      super(Gocamping.this, "POST", REST_PATH, content, Void.class);
      this.campingTripId = com.google.api.client.util.Preconditions.checkNotNull(campingTripId, "Required parameter campingTripId must be specified.");
    }

    @Override
    public AddExpense setAlt(java.lang.String alt) {
      return (AddExpense) super.setAlt(alt);
    }

    @Override
    public AddExpense setFields(java.lang.String fields) {
      return (AddExpense) super.setFields(fields);
    }

    @Override
    public AddExpense setKey(java.lang.String key) {
      return (AddExpense) super.setKey(key);
    }

    @Override
    public AddExpense setOauthToken(java.lang.String oauthToken) {
      return (AddExpense) super.setOauthToken(oauthToken);
    }

    @Override
    public AddExpense setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddExpense) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddExpense setQuotaUser(java.lang.String quotaUser) {
      return (AddExpense) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddExpense setUserIp(java.lang.String userIp) {
      return (AddExpense) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long campingTripId;

    /**

     */
    public java.lang.Long getCampingTripId() {
      return campingTripId;
    }

    public AddExpense setCampingTripId(java.lang.Long campingTripId) {
      this.campingTripId = campingTripId;
      return this;
    }

    @Override
    public AddExpense set(String parameterName, Object value) {
      return (AddExpense) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addMember".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link AddMember#execute()} method to invoke the remote operation.
   *
   * @param familyID
   * @param campingTripId
   * @param content the {@link com.appspot.gocampingapis.gocamping.model.Member}
   * @return the request
   */
  public AddMember addMember(java.lang.Long familyID, java.lang.Long campingTripId, com.appspot.gocampingapis.gocamping.model.Member content) throws java.io.IOException {
    AddMember result = new AddMember(familyID, campingTripId, content);
    initialize(result);
    return result;
  }

  public class AddMember extends GocampingRequest<Void> {

    private static final String REST_PATH = "addMember/{familyID}/{campingTripId}";

    /**
     * Create a request for the method "addMember".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link AddMember#execute()} method to invoke the remote
     * operation. <p> {@link
     * AddMember#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param familyID
     * @param campingTripId
     * @param content the {@link com.appspot.gocampingapis.gocamping.model.Member}
     * @since 1.13
     */
    protected AddMember(java.lang.Long familyID, java.lang.Long campingTripId, com.appspot.gocampingapis.gocamping.model.Member content) {
      super(Gocamping.this, "POST", REST_PATH, content, Void.class);
      this.familyID = com.google.api.client.util.Preconditions.checkNotNull(familyID, "Required parameter familyID must be specified.");
      this.campingTripId = com.google.api.client.util.Preconditions.checkNotNull(campingTripId, "Required parameter campingTripId must be specified.");
    }

    @Override
    public AddMember setAlt(java.lang.String alt) {
      return (AddMember) super.setAlt(alt);
    }

    @Override
    public AddMember setFields(java.lang.String fields) {
      return (AddMember) super.setFields(fields);
    }

    @Override
    public AddMember setKey(java.lang.String key) {
      return (AddMember) super.setKey(key);
    }

    @Override
    public AddMember setOauthToken(java.lang.String oauthToken) {
      return (AddMember) super.setOauthToken(oauthToken);
    }

    @Override
    public AddMember setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddMember) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddMember setQuotaUser(java.lang.String quotaUser) {
      return (AddMember) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddMember setUserIp(java.lang.String userIp) {
      return (AddMember) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long familyID;

    /**

     */
    public java.lang.Long getFamilyID() {
      return familyID;
    }

    public AddMember setFamilyID(java.lang.Long familyID) {
      this.familyID = familyID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long campingTripId;

    /**

     */
    public java.lang.Long getCampingTripId() {
      return campingTripId;
    }

    public AddMember setCampingTripId(java.lang.Long campingTripId) {
      this.campingTripId = campingTripId;
      return this;
    }

    @Override
    public AddMember set(String parameterName, Object value) {
      return (AddMember) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "createCampingTrip".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link CreateCampingTrip#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.gocampingapis.gocamping.model.CampingTripWrapper}
   * @return the request
   */
  public CreateCampingTrip createCampingTrip(com.appspot.gocampingapis.gocamping.model.CampingTripWrapper content) throws java.io.IOException {
    CreateCampingTrip result = new CreateCampingTrip(content);
    initialize(result);
    return result;
  }

  public class CreateCampingTrip extends GocampingRequest<com.appspot.gocampingapis.gocamping.model.CampingTripValidationResult> {

    private static final String REST_PATH = "createCampingTrip";

    /**
     * Create a request for the method "createCampingTrip".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link CreateCampingTrip#execute()} method to invoke the remote
     * operation. <p> {@link CreateCampingTrip#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.gocampingapis.gocamping.model.CampingTripWrapper}
     * @since 1.13
     */
    protected CreateCampingTrip(com.appspot.gocampingapis.gocamping.model.CampingTripWrapper content) {
      super(Gocamping.this, "POST", REST_PATH, content, com.appspot.gocampingapis.gocamping.model.CampingTripValidationResult.class);
    }

    @Override
    public CreateCampingTrip setAlt(java.lang.String alt) {
      return (CreateCampingTrip) super.setAlt(alt);
    }

    @Override
    public CreateCampingTrip setFields(java.lang.String fields) {
      return (CreateCampingTrip) super.setFields(fields);
    }

    @Override
    public CreateCampingTrip setKey(java.lang.String key) {
      return (CreateCampingTrip) super.setKey(key);
    }

    @Override
    public CreateCampingTrip setOauthToken(java.lang.String oauthToken) {
      return (CreateCampingTrip) super.setOauthToken(oauthToken);
    }

    @Override
    public CreateCampingTrip setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (CreateCampingTrip) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public CreateCampingTrip setQuotaUser(java.lang.String quotaUser) {
      return (CreateCampingTrip) super.setQuotaUser(quotaUser);
    }

    @Override
    public CreateCampingTrip setUserIp(java.lang.String userIp) {
      return (CreateCampingTrip) super.setUserIp(userIp);
    }

    @Override
    public CreateCampingTrip set(String parameterName, Object value) {
      return (CreateCampingTrip) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deletUser".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link DeletUser#execute()} method to invoke the remote operation.
   *
   * @param registeredPhoneNumber
   * @return the request
   */
  public DeletUser deletUser(java.lang.Long registeredPhoneNumber) throws java.io.IOException {
    DeletUser result = new DeletUser(registeredPhoneNumber);
    initialize(result);
    return result;
  }

  public class DeletUser extends GocampingRequest<Void> {

    private static final String REST_PATH = "deletUser/{registeredPhoneNumber}";

    /**
     * Create a request for the method "deletUser".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link DeletUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * DeletUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param registeredPhoneNumber
     * @since 1.13
     */
    protected DeletUser(java.lang.Long registeredPhoneNumber) {
      super(Gocamping.this, "POST", REST_PATH, null, Void.class);
      this.registeredPhoneNumber = com.google.api.client.util.Preconditions.checkNotNull(registeredPhoneNumber, "Required parameter registeredPhoneNumber must be specified.");
    }

    @Override
    public DeletUser setAlt(java.lang.String alt) {
      return (DeletUser) super.setAlt(alt);
    }

    @Override
    public DeletUser setFields(java.lang.String fields) {
      return (DeletUser) super.setFields(fields);
    }

    @Override
    public DeletUser setKey(java.lang.String key) {
      return (DeletUser) super.setKey(key);
    }

    @Override
    public DeletUser setOauthToken(java.lang.String oauthToken) {
      return (DeletUser) super.setOauthToken(oauthToken);
    }

    @Override
    public DeletUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeletUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeletUser setQuotaUser(java.lang.String quotaUser) {
      return (DeletUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeletUser setUserIp(java.lang.String userIp) {
      return (DeletUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long registeredPhoneNumber;

    /**

     */
    public java.lang.Long getRegisteredPhoneNumber() {
      return registeredPhoneNumber;
    }

    public DeletUser setRegisteredPhoneNumber(java.lang.Long registeredPhoneNumber) {
      this.registeredPhoneNumber = registeredPhoneNumber;
      return this;
    }

    @Override
    public DeletUser set(String parameterName, Object value) {
      return (DeletUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteCampingTrip".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link DeleteCampingTrip#execute()} method to invoke the remote operation.
   *
   * @param campingTripId
   * @return the request
   */
  public DeleteCampingTrip deleteCampingTrip(java.lang.Long campingTripId) throws java.io.IOException {
    DeleteCampingTrip result = new DeleteCampingTrip(campingTripId);
    initialize(result);
    return result;
  }

  public class DeleteCampingTrip extends GocampingRequest<Void> {

    private static final String REST_PATH = "campingtrip/{campingTripId}";

    /**
     * Create a request for the method "deleteCampingTrip".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link DeleteCampingTrip#execute()} method to invoke the remote
     * operation. <p> {@link DeleteCampingTrip#initialize(com.google.api.client.googleapis.services.Ab
     * stractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param campingTripId
     * @since 1.13
     */
    protected DeleteCampingTrip(java.lang.Long campingTripId) {
      super(Gocamping.this, "POST", REST_PATH, null, Void.class);
      this.campingTripId = com.google.api.client.util.Preconditions.checkNotNull(campingTripId, "Required parameter campingTripId must be specified.");
    }

    @Override
    public DeleteCampingTrip setAlt(java.lang.String alt) {
      return (DeleteCampingTrip) super.setAlt(alt);
    }

    @Override
    public DeleteCampingTrip setFields(java.lang.String fields) {
      return (DeleteCampingTrip) super.setFields(fields);
    }

    @Override
    public DeleteCampingTrip setKey(java.lang.String key) {
      return (DeleteCampingTrip) super.setKey(key);
    }

    @Override
    public DeleteCampingTrip setOauthToken(java.lang.String oauthToken) {
      return (DeleteCampingTrip) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteCampingTrip setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteCampingTrip) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteCampingTrip setQuotaUser(java.lang.String quotaUser) {
      return (DeleteCampingTrip) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteCampingTrip setUserIp(java.lang.String userIp) {
      return (DeleteCampingTrip) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long campingTripId;

    /**

     */
    public java.lang.Long getCampingTripId() {
      return campingTripId;
    }

    public DeleteCampingTrip setCampingTripId(java.lang.Long campingTripId) {
      this.campingTripId = campingTripId;
      return this;
    }

    @Override
    public DeleteCampingTrip set(String parameterName, Object value) {
      return (DeleteCampingTrip) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteExpense".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link DeleteExpense#execute()} method to invoke the remote operation.
   *
   * @param expenseID
   * @param campingTripId
   * @return the request
   */
  public DeleteExpense deleteExpense(java.lang.Long expenseID, java.lang.Long campingTripId) throws java.io.IOException {
    DeleteExpense result = new DeleteExpense(expenseID, campingTripId);
    initialize(result);
    return result;
  }

  public class DeleteExpense extends GocampingRequest<Void> {

    private static final String REST_PATH = "expense/{expenseID}/{campingTripId}";

    /**
     * Create a request for the method "deleteExpense".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link DeleteExpense#execute()} method to invoke the remote
     * operation. <p> {@link DeleteExpense#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param expenseID
     * @param campingTripId
     * @since 1.13
     */
    protected DeleteExpense(java.lang.Long expenseID, java.lang.Long campingTripId) {
      super(Gocamping.this, "POST", REST_PATH, null, Void.class);
      this.expenseID = com.google.api.client.util.Preconditions.checkNotNull(expenseID, "Required parameter expenseID must be specified.");
      this.campingTripId = com.google.api.client.util.Preconditions.checkNotNull(campingTripId, "Required parameter campingTripId must be specified.");
    }

    @Override
    public DeleteExpense setAlt(java.lang.String alt) {
      return (DeleteExpense) super.setAlt(alt);
    }

    @Override
    public DeleteExpense setFields(java.lang.String fields) {
      return (DeleteExpense) super.setFields(fields);
    }

    @Override
    public DeleteExpense setKey(java.lang.String key) {
      return (DeleteExpense) super.setKey(key);
    }

    @Override
    public DeleteExpense setOauthToken(java.lang.String oauthToken) {
      return (DeleteExpense) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteExpense setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteExpense) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteExpense setQuotaUser(java.lang.String quotaUser) {
      return (DeleteExpense) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteExpense setUserIp(java.lang.String userIp) {
      return (DeleteExpense) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long expenseID;

    /**

     */
    public java.lang.Long getExpenseID() {
      return expenseID;
    }

    public DeleteExpense setExpenseID(java.lang.Long expenseID) {
      this.expenseID = expenseID;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long campingTripId;

    /**

     */
    public java.lang.Long getCampingTripId() {
      return campingTripId;
    }

    public DeleteExpense setCampingTripId(java.lang.Long campingTripId) {
      this.campingTripId = campingTripId;
      return this;
    }

    @Override
    public DeleteExpense set(String parameterName, Object value) {
      return (DeleteExpense) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteFamily".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link DeleteFamily#execute()} method to invoke the remote operation.
   *
   * @param familyId
   * @return the request
   */
  public DeleteFamily deleteFamily(java.lang.Long familyId) throws java.io.IOException {
    DeleteFamily result = new DeleteFamily(familyId);
    initialize(result);
    return result;
  }

  public class DeleteFamily extends GocampingRequest<Void> {

    private static final String REST_PATH = "family/{familyId}";

    /**
     * Create a request for the method "deleteFamily".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link DeleteFamily#execute()} method to invoke the remote
     * operation. <p> {@link
     * DeleteFamily#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param familyId
     * @since 1.13
     */
    protected DeleteFamily(java.lang.Long familyId) {
      super(Gocamping.this, "DELETE", REST_PATH, null, Void.class);
      this.familyId = com.google.api.client.util.Preconditions.checkNotNull(familyId, "Required parameter familyId must be specified.");
    }

    @Override
    public DeleteFamily setAlt(java.lang.String alt) {
      return (DeleteFamily) super.setAlt(alt);
    }

    @Override
    public DeleteFamily setFields(java.lang.String fields) {
      return (DeleteFamily) super.setFields(fields);
    }

    @Override
    public DeleteFamily setKey(java.lang.String key) {
      return (DeleteFamily) super.setKey(key);
    }

    @Override
    public DeleteFamily setOauthToken(java.lang.String oauthToken) {
      return (DeleteFamily) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteFamily setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteFamily) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteFamily setQuotaUser(java.lang.String quotaUser) {
      return (DeleteFamily) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteFamily setUserIp(java.lang.String userIp) {
      return (DeleteFamily) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long familyId;

    /**

     */
    public java.lang.Long getFamilyId() {
      return familyId;
    }

    public DeleteFamily setFamilyId(java.lang.Long familyId) {
      this.familyId = familyId;
      return this;
    }

    @Override
    public DeleteFamily set(String parameterName, Object value) {
      return (DeleteFamily) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "deleteMember".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link DeleteMember#execute()} method to invoke the remote operation.
   *
   * @param memberId
   * @param familyId
   * @param campingTripId
   * @return the request
   */
  public DeleteMember deleteMember(java.lang.Long memberId, java.lang.Long familyId, java.lang.Long campingTripId) throws java.io.IOException {
    DeleteMember result = new DeleteMember(memberId, familyId, campingTripId);
    initialize(result);
    return result;
  }

  public class DeleteMember extends GocampingRequest<Void> {

    private static final String REST_PATH = "member/{memberId}/{familyId}/{campingTripId}";

    /**
     * Create a request for the method "deleteMember".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link DeleteMember#execute()} method to invoke the remote
     * operation. <p> {@link
     * DeleteMember#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param memberId
     * @param familyId
     * @param campingTripId
     * @since 1.13
     */
    protected DeleteMember(java.lang.Long memberId, java.lang.Long familyId, java.lang.Long campingTripId) {
      super(Gocamping.this, "POST", REST_PATH, null, Void.class);
      this.memberId = com.google.api.client.util.Preconditions.checkNotNull(memberId, "Required parameter memberId must be specified.");
      this.familyId = com.google.api.client.util.Preconditions.checkNotNull(familyId, "Required parameter familyId must be specified.");
      this.campingTripId = com.google.api.client.util.Preconditions.checkNotNull(campingTripId, "Required parameter campingTripId must be specified.");
    }

    @Override
    public DeleteMember setAlt(java.lang.String alt) {
      return (DeleteMember) super.setAlt(alt);
    }

    @Override
    public DeleteMember setFields(java.lang.String fields) {
      return (DeleteMember) super.setFields(fields);
    }

    @Override
    public DeleteMember setKey(java.lang.String key) {
      return (DeleteMember) super.setKey(key);
    }

    @Override
    public DeleteMember setOauthToken(java.lang.String oauthToken) {
      return (DeleteMember) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteMember setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteMember) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteMember setQuotaUser(java.lang.String quotaUser) {
      return (DeleteMember) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteMember setUserIp(java.lang.String userIp) {
      return (DeleteMember) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long memberId;

    /**

     */
    public java.lang.Long getMemberId() {
      return memberId;
    }

    public DeleteMember setMemberId(java.lang.Long memberId) {
      this.memberId = memberId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long familyId;

    /**

     */
    public java.lang.Long getFamilyId() {
      return familyId;
    }

    public DeleteMember setFamilyId(java.lang.Long familyId) {
      this.familyId = familyId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Long campingTripId;

    /**

     */
    public java.lang.Long getCampingTripId() {
      return campingTripId;
    }

    public DeleteMember setCampingTripId(java.lang.Long campingTripId) {
      this.campingTripId = campingTripId;
      return this;
    }

    @Override
    public DeleteMember set(String parameterName, Object value) {
      return (DeleteMember) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAllFamilyExpenses".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link GetAllFamilyExpenses#execute()} method to invoke the remote
   * operation.
   *
   * @param familyID
   * @return the request
   */
  public GetAllFamilyExpenses getAllFamilyExpenses(java.lang.Long familyID) throws java.io.IOException {
    GetAllFamilyExpenses result = new GetAllFamilyExpenses(familyID);
    initialize(result);
    return result;
  }

  public class GetAllFamilyExpenses extends GocampingRequest<com.appspot.gocampingapis.gocamping.model.ExpenseCollection> {

    private static final String REST_PATH = "expensecollection/{familyID}";

    /**
     * Create a request for the method "getAllFamilyExpenses".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link GetAllFamilyExpenses#execute()} method to invoke the
     * remote operation. <p> {@link GetAllFamilyExpenses#initialize(com.google.api.client.googleapis.s
     * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @param familyID
     * @since 1.13
     */
    protected GetAllFamilyExpenses(java.lang.Long familyID) {
      super(Gocamping.this, "POST", REST_PATH, null, com.appspot.gocampingapis.gocamping.model.ExpenseCollection.class);
      this.familyID = com.google.api.client.util.Preconditions.checkNotNull(familyID, "Required parameter familyID must be specified.");
    }

    @Override
    public GetAllFamilyExpenses setAlt(java.lang.String alt) {
      return (GetAllFamilyExpenses) super.setAlt(alt);
    }

    @Override
    public GetAllFamilyExpenses setFields(java.lang.String fields) {
      return (GetAllFamilyExpenses) super.setFields(fields);
    }

    @Override
    public GetAllFamilyExpenses setKey(java.lang.String key) {
      return (GetAllFamilyExpenses) super.setKey(key);
    }

    @Override
    public GetAllFamilyExpenses setOauthToken(java.lang.String oauthToken) {
      return (GetAllFamilyExpenses) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAllFamilyExpenses setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAllFamilyExpenses) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAllFamilyExpenses setQuotaUser(java.lang.String quotaUser) {
      return (GetAllFamilyExpenses) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAllFamilyExpenses setUserIp(java.lang.String userIp) {
      return (GetAllFamilyExpenses) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long familyID;

    /**

     */
    public java.lang.Long getFamilyID() {
      return familyID;
    }

    public GetAllFamilyExpenses setFamilyID(java.lang.Long familyID) {
      this.familyID = familyID;
      return this;
    }

    @Override
    public GetAllFamilyExpenses set(String parameterName, Object value) {
      return (GetAllFamilyExpenses) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getAllFamilyMembers".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link GetAllFamilyMembers#execute()} method to invoke the remote operation.
   *
   * @param familyId
   * @return the request
   */
  public GetAllFamilyMembers getAllFamilyMembers(java.lang.Long familyId) throws java.io.IOException {
    GetAllFamilyMembers result = new GetAllFamilyMembers(familyId);
    initialize(result);
    return result;
  }

  public class GetAllFamilyMembers extends GocampingRequest<com.appspot.gocampingapis.gocamping.model.MemberCollection> {

    private static final String REST_PATH = "membercollection/{familyId}";

    /**
     * Create a request for the method "getAllFamilyMembers".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link GetAllFamilyMembers#execute()} method to invoke the remote
     * operation. <p> {@link GetAllFamilyMembers#initialize(com.google.api.client.googleapis.services.
     * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param familyId
     * @since 1.13
     */
    protected GetAllFamilyMembers(java.lang.Long familyId) {
      super(Gocamping.this, "POST", REST_PATH, null, com.appspot.gocampingapis.gocamping.model.MemberCollection.class);
      this.familyId = com.google.api.client.util.Preconditions.checkNotNull(familyId, "Required parameter familyId must be specified.");
    }

    @Override
    public GetAllFamilyMembers setAlt(java.lang.String alt) {
      return (GetAllFamilyMembers) super.setAlt(alt);
    }

    @Override
    public GetAllFamilyMembers setFields(java.lang.String fields) {
      return (GetAllFamilyMembers) super.setFields(fields);
    }

    @Override
    public GetAllFamilyMembers setKey(java.lang.String key) {
      return (GetAllFamilyMembers) super.setKey(key);
    }

    @Override
    public GetAllFamilyMembers setOauthToken(java.lang.String oauthToken) {
      return (GetAllFamilyMembers) super.setOauthToken(oauthToken);
    }

    @Override
    public GetAllFamilyMembers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetAllFamilyMembers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetAllFamilyMembers setQuotaUser(java.lang.String quotaUser) {
      return (GetAllFamilyMembers) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetAllFamilyMembers setUserIp(java.lang.String userIp) {
      return (GetAllFamilyMembers) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long familyId;

    /**

     */
    public java.lang.Long getFamilyId() {
      return familyId;
    }

    public GetAllFamilyMembers setFamilyId(java.lang.Long familyId) {
      this.familyId = familyId;
      return this;
    }

    @Override
    public GetAllFamilyMembers set(String parameterName, Object value) {
      return (GetAllFamilyMembers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getCampingTrips".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link GetCampingTrips#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.gocampingapis.gocamping.model.UserAccount}
   * @return the request
   */
  public GetCampingTrips getCampingTrips(com.appspot.gocampingapis.gocamping.model.UserAccount content) throws java.io.IOException {
    GetCampingTrips result = new GetCampingTrips(content);
    initialize(result);
    return result;
  }

  public class GetCampingTrips extends GocampingRequest<com.appspot.gocampingapis.gocamping.model.CampingTripCollection> {

    private static final String REST_PATH = "campingtripcollection";

    /**
     * Create a request for the method "getCampingTrips".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link GetCampingTrips#execute()} method to invoke the remote
     * operation. <p> {@link GetCampingTrips#initialize(com.google.api.client.googleapis.services.Abst
     * ractGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.appspot.gocampingapis.gocamping.model.UserAccount}
     * @since 1.13
     */
    protected GetCampingTrips(com.appspot.gocampingapis.gocamping.model.UserAccount content) {
      super(Gocamping.this, "POST", REST_PATH, content, com.appspot.gocampingapis.gocamping.model.CampingTripCollection.class);
    }

    @Override
    public GetCampingTrips setAlt(java.lang.String alt) {
      return (GetCampingTrips) super.setAlt(alt);
    }

    @Override
    public GetCampingTrips setFields(java.lang.String fields) {
      return (GetCampingTrips) super.setFields(fields);
    }

    @Override
    public GetCampingTrips setKey(java.lang.String key) {
      return (GetCampingTrips) super.setKey(key);
    }

    @Override
    public GetCampingTrips setOauthToken(java.lang.String oauthToken) {
      return (GetCampingTrips) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCampingTrips setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCampingTrips) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCampingTrips setQuotaUser(java.lang.String quotaUser) {
      return (GetCampingTrips) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCampingTrips setUserIp(java.lang.String userIp) {
      return (GetCampingTrips) super.setUserIp(userIp);
    }

    @Override
    public GetCampingTrips set(String parameterName, Object value) {
      return (GetCampingTrips) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getFamiliesForCampingTrip".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link GetFamiliesForCampingTrip#execute()} method to invoke the remote
   * operation.
   *
   * @param campingTripId
   * @return the request
   */
  public GetFamiliesForCampingTrip getFamiliesForCampingTrip(java.lang.Long campingTripId) throws java.io.IOException {
    GetFamiliesForCampingTrip result = new GetFamiliesForCampingTrip(campingTripId);
    initialize(result);
    return result;
  }

  public class GetFamiliesForCampingTrip extends GocampingRequest<com.appspot.gocampingapis.gocamping.model.FamilyCollection> {

    private static final String REST_PATH = "familycollection/{campingTripId}";

    /**
     * Create a request for the method "getFamiliesForCampingTrip".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link GetFamiliesForCampingTrip#execute()} method to invoke the
     * remote operation. <p> {@link GetFamiliesForCampingTrip#initialize(com.google.api.client.googlea
     * pis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
     * immediately after invoking the constructor. </p>
     *
     * @param campingTripId
     * @since 1.13
     */
    protected GetFamiliesForCampingTrip(java.lang.Long campingTripId) {
      super(Gocamping.this, "POST", REST_PATH, null, com.appspot.gocampingapis.gocamping.model.FamilyCollection.class);
      this.campingTripId = com.google.api.client.util.Preconditions.checkNotNull(campingTripId, "Required parameter campingTripId must be specified.");
    }

    @Override
    public GetFamiliesForCampingTrip setAlt(java.lang.String alt) {
      return (GetFamiliesForCampingTrip) super.setAlt(alt);
    }

    @Override
    public GetFamiliesForCampingTrip setFields(java.lang.String fields) {
      return (GetFamiliesForCampingTrip) super.setFields(fields);
    }

    @Override
    public GetFamiliesForCampingTrip setKey(java.lang.String key) {
      return (GetFamiliesForCampingTrip) super.setKey(key);
    }

    @Override
    public GetFamiliesForCampingTrip setOauthToken(java.lang.String oauthToken) {
      return (GetFamiliesForCampingTrip) super.setOauthToken(oauthToken);
    }

    @Override
    public GetFamiliesForCampingTrip setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetFamiliesForCampingTrip) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetFamiliesForCampingTrip setQuotaUser(java.lang.String quotaUser) {
      return (GetFamiliesForCampingTrip) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetFamiliesForCampingTrip setUserIp(java.lang.String userIp) {
      return (GetFamiliesForCampingTrip) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long campingTripId;

    /**

     */
    public java.lang.Long getCampingTripId() {
      return campingTripId;
    }

    public GetFamiliesForCampingTrip setCampingTripId(java.lang.Long campingTripId) {
      this.campingTripId = campingTripId;
      return this;
    }

    @Override
    public GetFamiliesForCampingTrip set(String parameterName, Object value) {
      return (GetFamiliesForCampingTrip) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getFamily".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link GetFamily#execute()} method to invoke the remote operation.
   *
   * @param familyID
   * @return the request
   */
  public GetFamily getFamily(java.lang.Long familyID) throws java.io.IOException {
    GetFamily result = new GetFamily(familyID);
    initialize(result);
    return result;
  }

  public class GetFamily extends GocampingRequest<com.appspot.gocampingapis.gocamping.model.Family> {

    private static final String REST_PATH = "family/{familyID}";

    /**
     * Create a request for the method "getFamily".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link GetFamily#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetFamily#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param familyID
     * @since 1.13
     */
    protected GetFamily(java.lang.Long familyID) {
      super(Gocamping.this, "POST", REST_PATH, null, com.appspot.gocampingapis.gocamping.model.Family.class);
      this.familyID = com.google.api.client.util.Preconditions.checkNotNull(familyID, "Required parameter familyID must be specified.");
    }

    @Override
    public GetFamily setAlt(java.lang.String alt) {
      return (GetFamily) super.setAlt(alt);
    }

    @Override
    public GetFamily setFields(java.lang.String fields) {
      return (GetFamily) super.setFields(fields);
    }

    @Override
    public GetFamily setKey(java.lang.String key) {
      return (GetFamily) super.setKey(key);
    }

    @Override
    public GetFamily setOauthToken(java.lang.String oauthToken) {
      return (GetFamily) super.setOauthToken(oauthToken);
    }

    @Override
    public GetFamily setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetFamily) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetFamily setQuotaUser(java.lang.String quotaUser) {
      return (GetFamily) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetFamily setUserIp(java.lang.String userIp) {
      return (GetFamily) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long familyID;

    /**

     */
    public java.lang.Long getFamilyID() {
      return familyID;
    }

    public GetFamily setFamilyID(java.lang.Long familyID) {
      this.familyID = familyID;
      return this;
    }

    @Override
    public GetFamily set(String parameterName, Object value) {
      return (GetFamily) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMember".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link GetMember#execute()} method to invoke the remote operation.
   *
   * @param memberId
   * @return the request
   */
  public GetMember getMember(java.lang.Long memberId) throws java.io.IOException {
    GetMember result = new GetMember(memberId);
    initialize(result);
    return result;
  }

  public class GetMember extends GocampingRequest<com.appspot.gocampingapis.gocamping.model.Member> {

    private static final String REST_PATH = "member/{memberId}";

    /**
     * Create a request for the method "getMember".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link GetMember#execute()} method to invoke the remote
     * operation. <p> {@link
     * GetMember#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param memberId
     * @since 1.13
     */
    protected GetMember(java.lang.Long memberId) {
      super(Gocamping.this, "POST", REST_PATH, null, com.appspot.gocampingapis.gocamping.model.Member.class);
      this.memberId = com.google.api.client.util.Preconditions.checkNotNull(memberId, "Required parameter memberId must be specified.");
    }

    @Override
    public GetMember setAlt(java.lang.String alt) {
      return (GetMember) super.setAlt(alt);
    }

    @Override
    public GetMember setFields(java.lang.String fields) {
      return (GetMember) super.setFields(fields);
    }

    @Override
    public GetMember setKey(java.lang.String key) {
      return (GetMember) super.setKey(key);
    }

    @Override
    public GetMember setOauthToken(java.lang.String oauthToken) {
      return (GetMember) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMember setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMember) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMember setQuotaUser(java.lang.String quotaUser) {
      return (GetMember) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMember setUserIp(java.lang.String userIp) {
      return (GetMember) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long memberId;

    /**

     */
    public java.lang.Long getMemberId() {
      return memberId;
    }

    public GetMember setMemberId(java.lang.Long memberId) {
      this.memberId = memberId;
      return this;
    }

    @Override
    public GetMember set(String parameterName, Object value) {
      return (GetMember) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "inviteFamilies".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link InviteFamilies#execute()} method to invoke the remote operation.
   *
   * @param campingTripId
   * @param content the {@link com.appspot.gocampingapis.gocamping.model.FamiliesWrapper}
   * @return the request
   */
  public InviteFamilies inviteFamilies(java.lang.Long campingTripId, com.appspot.gocampingapis.gocamping.model.FamiliesWrapper content) throws java.io.IOException {
    InviteFamilies result = new InviteFamilies(campingTripId, content);
    initialize(result);
    return result;
  }

  public class InviteFamilies extends GocampingRequest<Void> {

    private static final String REST_PATH = "inviteFamilies/{campingTripId}";

    /**
     * Create a request for the method "inviteFamilies".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link InviteFamilies#execute()} method to invoke the remote
     * operation. <p> {@link InviteFamilies#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param campingTripId
     * @param content the {@link com.appspot.gocampingapis.gocamping.model.FamiliesWrapper}
     * @since 1.13
     */
    protected InviteFamilies(java.lang.Long campingTripId, com.appspot.gocampingapis.gocamping.model.FamiliesWrapper content) {
      super(Gocamping.this, "POST", REST_PATH, content, Void.class);
      this.campingTripId = com.google.api.client.util.Preconditions.checkNotNull(campingTripId, "Required parameter campingTripId must be specified.");
    }

    @Override
    public InviteFamilies setAlt(java.lang.String alt) {
      return (InviteFamilies) super.setAlt(alt);
    }

    @Override
    public InviteFamilies setFields(java.lang.String fields) {
      return (InviteFamilies) super.setFields(fields);
    }

    @Override
    public InviteFamilies setKey(java.lang.String key) {
      return (InviteFamilies) super.setKey(key);
    }

    @Override
    public InviteFamilies setOauthToken(java.lang.String oauthToken) {
      return (InviteFamilies) super.setOauthToken(oauthToken);
    }

    @Override
    public InviteFamilies setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (InviteFamilies) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public InviteFamilies setQuotaUser(java.lang.String quotaUser) {
      return (InviteFamilies) super.setQuotaUser(quotaUser);
    }

    @Override
    public InviteFamilies setUserIp(java.lang.String userIp) {
      return (InviteFamilies) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long campingTripId;

    /**

     */
    public java.lang.Long getCampingTripId() {
      return campingTripId;
    }

    public InviteFamilies setCampingTripId(java.lang.Long campingTripId) {
      this.campingTripId = campingTripId;
      return this;
    }

    @Override
    public InviteFamilies set(String parameterName, Object value) {
      return (InviteFamilies) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "login".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link Login#execute()} method to invoke the remote operation.
   *
   * @param phoneNumber
   * @param password
   * @return the request
   */
  public Login login(java.lang.Long phoneNumber, java.lang.String password) throws java.io.IOException {
    Login result = new Login(phoneNumber, password);
    initialize(result);
    return result;
  }

  public class Login extends GocampingRequest<com.appspot.gocampingapis.gocamping.model.UserAccount> {

    private static final String REST_PATH = "login/{phoneNumber}/{password}";

    /**
     * Create a request for the method "login".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link Login#execute()} method to invoke the remote operation.
     * <p> {@link
     * Login#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param phoneNumber
     * @param password
     * @since 1.13
     */
    protected Login(java.lang.Long phoneNumber, java.lang.String password) {
      super(Gocamping.this, "POST", REST_PATH, null, com.appspot.gocampingapis.gocamping.model.UserAccount.class);
      this.phoneNumber = com.google.api.client.util.Preconditions.checkNotNull(phoneNumber, "Required parameter phoneNumber must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public Login setAlt(java.lang.String alt) {
      return (Login) super.setAlt(alt);
    }

    @Override
    public Login setFields(java.lang.String fields) {
      return (Login) super.setFields(fields);
    }

    @Override
    public Login setKey(java.lang.String key) {
      return (Login) super.setKey(key);
    }

    @Override
    public Login setOauthToken(java.lang.String oauthToken) {
      return (Login) super.setOauthToken(oauthToken);
    }

    @Override
    public Login setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (Login) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public Login setQuotaUser(java.lang.String quotaUser) {
      return (Login) super.setQuotaUser(quotaUser);
    }

    @Override
    public Login setUserIp(java.lang.String userIp) {
      return (Login) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long phoneNumber;

    /**

     */
    public java.lang.Long getPhoneNumber() {
      return phoneNumber;
    }

    public Login setPhoneNumber(java.lang.Long phoneNumber) {
      this.phoneNumber = phoneNumber;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public Login setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public Login set(String parameterName, Object value) {
      return (Login) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "registerUser".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link RegisterUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.gocampingapis.gocamping.model.UserAccount}
   * @return the request
   */
  public RegisterUser registerUser(com.appspot.gocampingapis.gocamping.model.UserAccount content) throws java.io.IOException {
    RegisterUser result = new RegisterUser(content);
    initialize(result);
    return result;
  }

  public class RegisterUser extends GocampingRequest<Void> {

    private static final String REST_PATH = "registerUser";

    /**
     * Create a request for the method "registerUser".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link RegisterUser#execute()} method to invoke the remote
     * operation. <p> {@link
     * RegisterUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.gocampingapis.gocamping.model.UserAccount}
     * @since 1.13
     */
    protected RegisterUser(com.appspot.gocampingapis.gocamping.model.UserAccount content) {
      super(Gocamping.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public RegisterUser setAlt(java.lang.String alt) {
      return (RegisterUser) super.setAlt(alt);
    }

    @Override
    public RegisterUser setFields(java.lang.String fields) {
      return (RegisterUser) super.setFields(fields);
    }

    @Override
    public RegisterUser setKey(java.lang.String key) {
      return (RegisterUser) super.setKey(key);
    }

    @Override
    public RegisterUser setOauthToken(java.lang.String oauthToken) {
      return (RegisterUser) super.setOauthToken(oauthToken);
    }

    @Override
    public RegisterUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RegisterUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RegisterUser setQuotaUser(java.lang.String quotaUser) {
      return (RegisterUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public RegisterUser setUserIp(java.lang.String userIp) {
      return (RegisterUser) super.setUserIp(userIp);
    }

    @Override
    public RegisterUser set(String parameterName, Object value) {
      return (RegisterUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "rsvpForTheFamily".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link RsvpForTheFamily#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.gocampingapis.gocamping.model.FamilyRSVPWrapper}
   * @return the request
   */
  public RsvpForTheFamily rsvpForTheFamily(com.appspot.gocampingapis.gocamping.model.FamilyRSVPWrapper content) throws java.io.IOException {
    RsvpForTheFamily result = new RsvpForTheFamily(content);
    initialize(result);
    return result;
  }

  public class RsvpForTheFamily extends GocampingRequest<Void> {

    private static final String REST_PATH = "rsvpForTheFamily";

    /**
     * Create a request for the method "rsvpForTheFamily".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link RsvpForTheFamily#execute()} method to invoke the remote
     * operation. <p> {@link RsvpForTheFamily#initialize(com.google.api.client.googleapis.services.Abs
     * tractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.gocampingapis.gocamping.model.FamilyRSVPWrapper}
     * @since 1.13
     */
    protected RsvpForTheFamily(com.appspot.gocampingapis.gocamping.model.FamilyRSVPWrapper content) {
      super(Gocamping.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public RsvpForTheFamily setAlt(java.lang.String alt) {
      return (RsvpForTheFamily) super.setAlt(alt);
    }

    @Override
    public RsvpForTheFamily setFields(java.lang.String fields) {
      return (RsvpForTheFamily) super.setFields(fields);
    }

    @Override
    public RsvpForTheFamily setKey(java.lang.String key) {
      return (RsvpForTheFamily) super.setKey(key);
    }

    @Override
    public RsvpForTheFamily setOauthToken(java.lang.String oauthToken) {
      return (RsvpForTheFamily) super.setOauthToken(oauthToken);
    }

    @Override
    public RsvpForTheFamily setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RsvpForTheFamily) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RsvpForTheFamily setQuotaUser(java.lang.String quotaUser) {
      return (RsvpForTheFamily) super.setQuotaUser(quotaUser);
    }

    @Override
    public RsvpForTheFamily setUserIp(java.lang.String userIp) {
      return (RsvpForTheFamily) super.setUserIp(userIp);
    }

    @Override
    public RsvpForTheFamily set(String parameterName, Object value) {
      return (RsvpForTheFamily) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateExpense".
   *
   * This request holds the parameters needed by the gocamping server.  After setting any optional
   * parameters, call the {@link UpdateExpense#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.gocampingapis.gocamping.model.Expense}
   * @return the request
   */
  public UpdateExpense updateExpense(com.appspot.gocampingapis.gocamping.model.Expense content) throws java.io.IOException {
    UpdateExpense result = new UpdateExpense(content);
    initialize(result);
    return result;
  }

  public class UpdateExpense extends GocampingRequest<Void> {

    private static final String REST_PATH = "void";

    /**
     * Create a request for the method "updateExpense".
     *
     * This request holds the parameters needed by the the gocamping server.  After setting any
     * optional parameters, call the {@link UpdateExpense#execute()} method to invoke the remote
     * operation. <p> {@link UpdateExpense#initialize(com.google.api.client.googleapis.services.Abstra
     * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @param content the {@link com.appspot.gocampingapis.gocamping.model.Expense}
     * @since 1.13
     */
    protected UpdateExpense(com.appspot.gocampingapis.gocamping.model.Expense content) {
      super(Gocamping.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public UpdateExpense setAlt(java.lang.String alt) {
      return (UpdateExpense) super.setAlt(alt);
    }

    @Override
    public UpdateExpense setFields(java.lang.String fields) {
      return (UpdateExpense) super.setFields(fields);
    }

    @Override
    public UpdateExpense setKey(java.lang.String key) {
      return (UpdateExpense) super.setKey(key);
    }

    @Override
    public UpdateExpense setOauthToken(java.lang.String oauthToken) {
      return (UpdateExpense) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateExpense setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateExpense) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateExpense setQuotaUser(java.lang.String quotaUser) {
      return (UpdateExpense) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateExpense setUserIp(java.lang.String userIp) {
      return (UpdateExpense) super.setUserIp(userIp);
    }

    @Override
    public UpdateExpense set(String parameterName, Object value) {
      return (UpdateExpense) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Gocamping}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Gocamping}. */
    @Override
    public Gocamping build() {
      return new Gocamping(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link GocampingRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setGocampingRequestInitializer(
        GocampingRequestInitializer gocampingRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(gocampingRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
